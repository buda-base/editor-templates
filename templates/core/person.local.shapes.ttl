# baseURI: http://purl.bdrc.io/shapes/core/PersonLocalShapes/
# imports: http://datashapes.org/dash
# imports: http://purl.bdrc.io/shapes/core/EventShapes/
# prefix: PersonLocalShapes

@prefix PersonLocalShapes: <http://purl.bdrc.io/shapes/core/PersonLocalShapes/> .
@prefix adm: <http://purl.bdrc.io/ontology/admin/> .
@prefix bda: <http://purl.bdrc.io/admin.data/> .
@prefix bdg: <http://purl.bdrc.io/graph/> .
@prefix bdo: <http://purl.bdrc.io/ontology/core/> .
@prefix bdr: <http://purl.bdrc.io/resource/> .
@prefix bds: <http://purl.bdrc.io/ontology/shapes/core/> .
@prefix bdsa: <http://purl.bdrc.io/ontology/shapes/adm/> .
@prefix bf: <http://id.loc.gov/ontologies/bibframe/> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix tosh: <http://topbraid.org/tosh#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

bdo:Person 
  bds:localShapeGraph bdg:PersonLocalShapes ;
  bds:localShape bds:PersonLocalShape ;
.
PersonLocalShapes:
  a owl:Ontology ;
  owl:imports <http://datashapes.org/dash> ;
  owl:imports <http://purl.bdrc.io/shapes/core/EventShapes/> ;
  owl:versionInfo "SHACL constraints for a internal elements of a Person graph" ;
.
bds:PersonShape
  a sh:NodeShape ;
  bds:identifierPrefix "P" ;
  bds:isLocalShape true ;
  rdfs:label "Person Shape"@en ;
  sh:property bds:PersonShape-personEvent ;
  sh:property bds:PersonShape-personGender ;
  sh:property bds:PersonShape-personName ;
  sh:targetClass bdo:Person ;
.
##
## Class checking
##
bds:CheckPersonClass  
    a      sh:NodeShape ;
    rdfs:label      "Check Person Class Shape"@en ;
    sh:targetSubjectsOf bdo:personName ;
    sh:message "focusNode must be a bdo:Person" ;
    sh:sparql [
      a sh:SPARQLConstraint ;
      sh:prefixes bds:RDF , bds:BDO ;
      sh:select """
        select distinct $this
        where {
            filter not exists { $this rdf:type bdo:Person . } .
        }	  
      """ ;
    ] ;
.
bds:CheckGenderClass  
    a      sh:NodeShape ;
    rdfs:label      "Check Gender Class Shape"@en ;
    sh:targetObjectsOf bdo:personGender ;
    sh:message "focusNode must be instance of bdo:Gender" ;
    sh:sparql [
      a sh:SPARQLConstraint ;
      sh:prefixes bds:RDF , bds:RDFS , bds:BDO ;
      sh:select """
        select distinct $this
        where {
            filter not exists { $this rdf:type bdo:Gender . } .
        }	  
      """ ;
    ] ;
.
bds:CheckPersonEventClass  
    a      sh:NodeShape ;
    rdfs:label      "Check PersonEvent Class Shape"@en ;
    sh:targetObjectsOf bdo:personEvent ;
    sh:message "focusNode must be subClassOf* bdo:PersonEvent" ;
    sh:sparql [
      a sh:SPARQLConstraint ;
      sh:prefixes bds:RDF , bds:RDFS , bds:BDO ;
      sh:select """
        select distinct $this
        where {
            filter not exists { $this rdf:type/rdfs:subClassOf* bdo:PersonEvent . } .
        }	  
      """ ;
    ] ;
.
bds:CheckPersonNameClass  
    a      sh:NodeShape ;
    rdfs:label      "Check PersonName Class Shape"@en ;
    sh:targetObjectsOf bdo:personName ;
    sh:message "focusNode must be subClassOf* bdo:PersonName" ;
    sh:sparql [
      a sh:SPARQLConstraint ;
      sh:prefixes bds:RDF , bds:RDFS , bds:BDO ;
      sh:select """
        select distinct $this
        where {
            filter not exists { $this rdf:type/rdfs:subClassOf* bdo:PersonName . } .
        }	  
      """ ;
    ] ;
.
##
## PersonName
##
bds:PersonShape-personName
  a sh:PropertyShape ;
  sh:path bdo:personName ;
  sh:description "this Person may have one or more names."@en ;
  sh:message "There must be at least one :personName object and each must be an IRI - no blank nodes"@en ;
  sh:minCount 1 ;
  sh:nodeKind sh:IRI ;
  sh:class bdo:PersonName ;
.
bds:PersonNameShape
  a sh:NodeShape ;
  bds:nodeShapeType bds:FacetShape ;
  rdfs:label "Person Name Shape"@en ;
  sh:property bds:PersonNameShape-personNameLabel ;
  sh:targetClass bdo:PersonName ;
.
bds:PersonNameShape-personNameLabel
  a sh:PropertyShape ;
  sh:path rdfs:label ;
  sh:datatype rdf:langString ;
  sh:description "this Person has a name given by the label."@en ;
  sh:message "A PersonName must have exactly one rdfs:label"@en ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.
##
## PersonEvent
##
bds:PersonShape-personEvent
  a sh:PropertyShape ;
  sh:path bdo:personEvent ;
  sh:class bdo:PersonEvent ;
  sh:description "this Person may have zero or more events like birth, death, ordination."@en ;
  sh:message "Each PersonEvent must be an IRI - no blank nodes"@en ;
  sh:nodeKind sh:IRI ;
  sh:class bdo:PersonEvent ;
.
bds:PersonEventShape
  a sh:NodeShape ;
  bds:nodeShapeType bds:FacetShape ;
  rdfs:label "Person Event Shape"@en ;
  sh:property bds:PersonEventShape-personEventRole ;
  sh:targetClass bdo:PersonEvent ;
.
bds:PersonEventShape-personEventRole
  a sh:PropertyShape ;
  sh:path bdo:personEventRole ;
  dash:editor dash:InstancesSelectEditor ;
  sh:class bdo:Role ;
  sh:maxCount 1 ;
  sh:message "At most one PersonEventRole allowed"@en ;
  sh:name "role associated with the event"@en ;
.
##
## Gender
##
bds:PersonShape-personGender
  a sh:PropertyShape ;
  sh:path bdo:personGender ;
  sh:class bdo:Gender ;
  sh:description "this Person may have at most one Gender or none if not known."@en ;
  sh:maxCount 1 ;
  sh:message "At most one bdo:gender allowed"@en ;
.
